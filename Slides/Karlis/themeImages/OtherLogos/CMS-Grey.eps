%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(r) 6.0
%%For: (AS-DC) (CERN)
%%Title: (CMS-Grey.eps)
%%CreationDate: (5/6/97) (16:33)
%%BoundingBox: 106 216 503 613
%%HiResBoundingBox: 106.483 216.3203 502.4011 612.2739
%%DocumentProcessColors: Magenta Yellow Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.0 0
%%+ procset Adobe_Illustrator_AI6_vars Adobe_Illustrator_AI6
%%+ procset Adobe_Illustrator_AI5 1.0 0
%AI5_FileFormat 2.0
%AI3_ColorUsage: Color
%%CMYKCustomColor: 1 0 0.55 0 (Aqua)
%%+ 0.75 0.05 1 0 (Grass Green)
%%+ 1 0.2 1 0 (Green)
%%+ 0.45 0 1 0 (Lime Green)
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set)
%%+ Options: 1 16 0 1 0 1 1 1 0 1 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 0 0 ()
%AI3_TemplateBox: 306 396 306 396
%AI3_TileBox: 31 31 583 761
%AI3_DocumentPreview: Macintosh_Pic
%AI5_ArtSize: 612 792
%AI5_RulerUnits: 2
%AI5_ArtFlags: 1 0 0 1 0 0 1 1 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI5_OpenToView: -450 936 -1.5 1019 725 58 0 1 2 40
%AI5_OpenViewLayers: 7
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1993 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 23 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch aload pop pop
			4
			{
				4 index mul 4 1 roll
			} repeat
			5 -1 roll pop
			setcmykcolor
		}
		def
	} if
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	level2?
	{
		gsave 1 1 1 1 setcmykcolor currentcmykcolor grestore
		add add add 4 eq
	}
	{
		1 0 0 0 testCMYKColorThrough
		0 1 0 0 testCMYKColorThrough
		0 0 1 0 testCMYKColorThrough
		0 0 0 1 testCMYKColorThrough
		and and and
	} ifelse
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.0 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 17 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
	
	/initialize
	{ 
		Adobe_ColorImage_AI6 begin
		Adobe_ColorImage_AI6
		{
			dup type /arraytype eq
			{
				dup xcheck
				{
					bind
				} if
			} if
			pop pop
		} forall
	} def
	/terminate { end } def
	
	currentdict /Adobe_ColorImage_AI6_Vars known not
	{
		/Adobe_ColorImage_AI6_Vars 14 dict def
	} if
	
	Adobe_ColorImage_AI6_Vars begin
		/channelcount 0 def
		/sourcecount 0 def
		/sourcearray 4 array def
		/plateindex -1 def
		/XIMask 0 def
		/XIBinary 0 def
		/XIChannelCount 0 def
		/XIBitsPerPixel 0 def
		/XIImageHeight 0 def
		/XIImageWidth 0 def
		/XIImageMatrix null def
		/XIBuffer null def
		/XIDataProc null def
 end
	
	/WalkRGBString null def
	/WalkCMYKString null def
	
	/StuffRGBIntoGrayString null def
	/RGBToGrayImageProc null def
	/StuffCMYKIntoGrayString null def
	/CMYKToGrayImageProc null def
	/ColorImageCompositeEmulator null def
	
	/SeparateCMYKImageProc null def
	
	/FourEqual null def
	/TestPlateIndex null def
	
	currentdict /_colorimage known not
	{
		/colorimage where
		{
			/colorimage get /_colorimage exch def
		}
		{
			/_colorimage null def
		} ifelse
	} if
	
	/_currenttransfer systemdict /currenttransfer get def
	
	/colorimage null def
	/XI null def
	
	
	/WalkRGBString
	{
		0 3 index
	
		dup length 1 sub 0 3 3 -1 roll
		{
			3 getinterval { } forall
	
			5 index exec
	
			3 index
		} for
		
		 5 { pop } repeat
	
	} def
	
	
	/WalkCMYKString
	{
		0 3 index
	
		dup length 1 sub 0 4 3 -1 roll
		{
			4 getinterval { } forall
			
			6 index exec
			
			3 index
			
		} for
		
		5 { pop } repeat
		
	} def
	
	
	/StuffRGBIntoGrayString
	{
		.11 mul exch
		
		.59 mul add exch
		
		.3 mul add
		
		cvi 3 copy put
		
		pop 1 add
	} def
	
	
	/RGBToGrayImageProc
	{	
		Adobe_ColorImage_AI6_Vars begin 
			sourcearray 0 get exec
			dup length 3 idiv string
			dup 3 1 roll 
			
			/StuffRGBIntoGrayString load exch
			WalkRGBString
	 end
	} def
	
	
	/StuffCMYKIntoGrayString
	{
		exch .11 mul add
		
		exch .59 mul add
		
		exch .3 mul add
		
		dup 255 gt { pop 255 } if
		
		255 exch sub cvi 3 copy put
		
		pop 1 add
	} def
	
	
	/CMYKToGrayImageProc
	{	
		Adobe_ColorImage_AI6_Vars begin
			sourcearray 0 get exec
			dup length 4 idiv string
			dup 3 1 roll 
			
			/StuffCMYKIntoGrayString load exch
			WalkCMYKString
	 end
	} def
	
	
	/ColorImageCompositeEmulator
	{
		pop true eq
		{
			Adobe_ColorImage_AI6_Vars /sourcecount get 5 add { pop } repeat
		}
		{
			Adobe_ColorImage_AI6_Vars /channelcount get 1 ne
			{
				Adobe_ColorImage_AI6_Vars begin
					sourcearray 0 3 -1 roll put
				
					channelcount 3 eq 
					{ 
						/RGBToGrayImageProc 
					}
					{ 
						/CMYKToGrayImageProc
					} ifelse
					load
			 end
			} if
			image
		} ifelse
	} def
	
	
	/SeparateCMYKImageProc
	{	
		Adobe_ColorImage_AI6_Vars begin
	
			sourcecount 0 ne
			{
				sourcearray plateindex get exec
			}
			{			
				sourcearray 0 get exec
				
				dup length 4 idiv string
				
				0 2 index
				
				plateindex 4 2 index length 1 sub
				{
					get 255 exch sub
					
					3 copy put pop 1 add
					
					2 index
				} for
	
				pop pop exch pop
			} ifelse
	 end
	} def
		
	
	/FourEqual
	{
		4 index ne
		{
			pop pop pop false
		}
		{
			4 index ne
			{
				pop pop false
			}
			{
				4 index ne
				{
					pop false
				}
				{
					4 index eq
				} ifelse
			} ifelse
		} ifelse
	} def
	
	
	/TestPlateIndex
	{
		Adobe_ColorImage_AI6_Vars begin
			/plateindex -1 def
	
			/setcmykcolor where
			{
				pop
				gsave
				1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
				0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
				0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
				0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
				grestore
	
				1 0 0 0 FourEqual 
				{ 
					/plateindex 0 def
				}
				{
					0 1 0 0 FourEqual
					{ 
						/plateindex 1 def
					}
					{
						0 0 1 0 FourEqual
						{
							/plateindex 2 def
						}
						{
							0 0 0 1 FourEqual
							{ 
								/plateindex 3 def
							}
							{
								0 0 0 0 FourEqual
								{
									/plateindex 5 def
								} if
							} ifelse
						} ifelse
					} ifelse
				} ifelse
				pop pop pop pop
			} if
			plateindex
	 end
	} def
	
	
	/colorimage
	{
		Adobe_ColorImage_AI6_Vars begin
			/channelcount 1 index def
			/sourcecount 2 index 1 eq { channelcount 1 sub } { 0 } ifelse def
	
			4 sourcecount add index dup 
			8 eq exch 1 eq or not
	 end
		
		{
			/_colorimage load null ne
			{
				_colorimage
			}
			{
				Adobe_ColorImage_AI6_Vars /sourcecount get
				7 add { pop } repeat
			} ifelse
		}
		{
			dup 3 eq
			TestPlateIndex
			dup -1 eq exch 5 eq or or
			{
				/_colorimage load null eq
				{
					ColorImageCompositeEmulator
				}
				{
					dup 1 eq
					{
						pop pop image
					}
					{
						Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
						{
							gsave
							
							0 _currenttransfer exec
							1 _currenttransfer exec
							eq
							{ 0 _currenttransfer exec 0.5 lt }
							{ 0 _currenttransfer exec 1 _currenttransfer exec gt } ifelse
							
							{ { pop 0 } } { { pop 1 } } ifelse
							systemdict /settransfer get exec
						} if
						
						_colorimage
						
						Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
						{
							grestore
						} if
					} ifelse
				} ifelse
			}
			{
				dup 1 eq
				{
					pop pop
					image
				}
				{
					pop pop
	
					Adobe_ColorImage_AI6_Vars begin
						sourcecount -1 0
						{			
							exch sourcearray 3 1 roll put
						} for
	
						/SeparateCMYKImageProc load
				 end
	
					systemdict /image get exec
				} ifelse
			} ifelse
		} ifelse
	} def
	
	/XI
	{
		Adobe_ColorImage_AI6_Vars begin
			gsave
			/XIMask exch 0 ne def
			/XIBinary exch 0 ne def
			pop
			pop
			/XIChannelCount exch def
			/XIBitsPerPixel exch def
			/XIImageHeight exch def
			/XIImageWidth exch def
			pop pop pop pop
			/XIImageMatrix exch def
			
			XIBitsPerPixel 1 eq
			{
				XIImageWidth 8 div ceiling cvi
			}
			{
				XIImageWidth XIChannelCount mul
			} ifelse
			/XIBuffer exch string def
			
			XIBinary
			{
				/XIDataProc { currentfile XIBuffer readstring pop } def
				currentfile 128 string readline pop pop
			}
			{
				/XIDataProc { currentfile XIBuffer readhexstring pop } def
			} ifelse
			
			0 0 moveto
			XIImageMatrix concat
			XIImageWidth XIImageHeight scale
			
			XIMask
			{
				XIImageWidth XIImageHeight
				false
				[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
				/XIDataProc load
				
				/_lp /null ddef
				_fc
				/_lp /imagemask ddef
				
				imagemask
			}
			{
				XIImageWidth XIImageHeight
				XIBitsPerPixel
				[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
				/XIDataProc load
				
				XIChannelCount 1 eq
				{
					
					gsave
					0 setgray
					
					image
					
					grestore
				}
				{
					false
					XIChannelCount
					colorimage
				} ifelse
			} ifelse
			grestore
	 end
	} def
	
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Full Prolog)
%%Version: 1.1 
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1994 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 81 dict dup begin
put
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_rise 0 def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_wv 0 def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 91 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/sw
{
	dup length exch stringwidth
	exch 5 -1 roll 3 index mul add
	4 1 roll 3 1 roll mul add
} def
/swj
{
	dup 4 1 roll
	dup length exch stringwidth
	exch 5 -1 roll 3 index mul add
	4 1 roll 3 1 roll mul add
	6 2 roll /_cnt 0 ddef
	{
		1 index eq
		{
			/_cnt _cnt 1 add ddef
		} if
	} forall
	pop
	exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss
{
	4 1 roll
	{
		2 npop
		(0) exch 2 copy 0 exch put pop
		gsave
		false charpath currentpoint
		4 index setmatrix
		stroke
		grestore
		moveto
		2 copy rmoveto
	} exch cshow
	3 npop
} def
/jss
{
	4 1 roll
	{
		2 npop
		(0) exch 2 copy 0 exch put
		gsave
		_sp eq
		{
			exch 6 index 6 index 6 index 5 -1 roll widthshow
			currentpoint
		}
		{
			false charpath currentpoint
			4 index setmatrix stroke
		} ifelse
		grestore
		moveto
		2 copy rmoveto
	} exch cshow
	6 npop
} def
/sp
{
	{
		2 npop (0) exch
		2 copy 0 exch put pop
		false charpath
		2 copy rmoveto
	} exch cshow
	2 npop
} def
/jsp
{
	{
		2 npop
		(0) exch 2 copy 0 exch put
		_sp eq
		{
			exch 5 index 5 index 5 index 5 -1 roll widthshow
		}
		{
			false charpath
		} ifelse
		2 copy rmoveto
	} exch cshow
	5 npop
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		endString eq
		{
			cleartomark stop
		} if
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		dup beginString eq
		{
			pop /layerCnt dup load 1 add store
		}
		{
			endString eq
			{
				layerCnt 1 eq
				{
					cleartomark stop
				}
				{
					/layerCnt dup load 1 sub store
				} ifelse
			} if
		} ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	4 npop
	6 1 roll
	pop
	4 1 roll
	pop pop pop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 3 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
end
setpacking
%%EndResource
%%EndProlog
%%BeginSetup
Adobe_level2_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_Begin_NonPrinting
Np
%AI3_BeginPattern: (Yellow Stripe)
(Yellow Stripe) 8.4499 4.6 80.4499 76.6 [
%AI3_Tile
(0 O 0 R 0 0.4 1 0 k 0 0.4 1 0 K) @
(
%AI6_BeginPatternLayer
800 Ar
0 J 0 j 3.6 w 4 M []0 d
%AI3_Note:
0 D
0 XR
8.1999 8.1999 m
80.6999 8.1999 L
S
8.1999 22.6 m
80.6999 22.6 L
S
8.1999 37.0001 m
80.6999 37.0001 L
S
8.1999 51.3999 m
80.6999 51.3999 L
S
8.1999 65.8 m
80.6999 65.8 L
S
8.1999 15.3999 m
80.6999 15.3999 L
S
8.1999 29.8 m
80.6999 29.8 L
S
8.1999 44.1999 m
80.6999 44.1999 L
S
8.1999 58.6 m
80.6999 58.6 L
S
8.1999 73.0001 m
80.6999 73.0001 L
S
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
3 Bn
%AI5_BeginGradient: (Black & White)
(Black & White) 0 2 Bd
[
0
0
0
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
1 %_Br
[
0 0 50 100 %_Bs
0 0 0 0 1 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Red & Yellow)
(Red & Yellow) 0 2 Bd
[
0
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
FFFFFEFEFDFDFDFCFCFBFBFBFAFAF9F9F9F8F8F7F7F7F6F6F5F5F5F4F4F3F3F3F2F2F1F1F1F0F0EF
EFEFEEEEEDEDEDECECEBEBEBEAEAE9E9E9E8E8E7E7E7E6E6E5E5E5E4E4E3E3E3E2E2E1E1E1E0E0DF
DFDFDEDEDDDDDDDCDCDBDBDBDADAD9D9D9D8D8D7D7D7D6D6D5D5D5D4D4D3D3D3D2D2D1D1D1D0D0CF
CFCFCECECDCDCDCCCCCBCBCBCACAC9C9C9C8C8C7C7C7C6C6C5C5C5C4C4C3C3C3C2C2C1C1C1C0C0BF
BFBFBEBEBDBDBDBCBCBBBBBBBABAB9B9B9B8B8B7B7B7B6B6B5B5B5B4B4B3B3B3B2B2B1B1B1B0B0AF
AFAFAEAEADADADACACABABABAAAAA9A9A9A8A8A7A7A7A6A6A5A5A5A4A4A3A3A3A2A2A1A1A1A0A09F
9F9F9E9E9D9D9D9C9C9B9B9B9A9A9999
>
0
1 %_Br
[
0 1 0.6 0 1 50 100 %_Bs
0 0 1 0 1 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Yellow & Blue Radial)
(Yellow & Blue Radial) 1 2 Bd
[
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
1415161718191A1B1C1D1E1F1F202122232425262728292A2A2B2C2D2E2F30313233343536363738
393A3B3C3D3E3F40414142434445464748494A4B4C4D4D4E4F50515253545556575858595A5B5C5D
5E5F60616263646465666768696A6B6C6D6E6F6F707172737475767778797A7B7B7C7D7E7F808182
83848586868788898A8B8C8D8E8F90919292939495969798999A9B9C9D9D9E9FA0A1A2A3A4A5A6A7
A8A9A9AAABACADAEAFB0B1B2B3B4B4B5B6B7B8B9BABBBCBDBEBFC0C0C1C2C3C4C5C6C7C8C9CACBCB
CCCDCECFD0D1D2D3D4D5D6D7D7D8D9DADBDCDDDEDFE0E1E2E2E3E4E5E6E7E8E9EAEBECEDEEEEEFF0
F1F2F3F4F5F6F7F8F9F9FAFBFCFDFEFF
>
<
ABAAAAA9A8A7A7A6A5A5A4A3A3A2A1A1A09F9F9E9D9D9C9B9B9A9999989797969595949393929191
908F8F8E8D8D8C8B8B8A8989888787868585848383828181807F7F7E7D7D7C7B7B7A797978777776
7575747373727171706F6F6E6D6D6C6B6B6A6969686767666565646362626160605F5E5E5D5C5C5B
5A5A5958585756565554545352525150504F4E4E4D4C4C4B4A4A4948484746464544444342424140
403F3E3E3D3C3C3B3A3A3938383736363534343332323130302F2E2E2D2C2C2B2A2A292828272626
25242423222121201F1F1E1D1D1C1B1B1A1919181717161515141313121111100F0F0E0D0D0C0B0B
0A090908070706050504030302010100
>
0
1 %_Br
[
0 0.08 0.67 0 1 50 14 %_Bs
1 1 0 0 1 50 100 %_Bs
BD
%AI5_EndGradient
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 25 Pb
Pn
Pc
1 g
Pc
0 g
Pc
0 0 0 0 k
Pc
0.75 g
Pc
0 g
Pc
0.25 g
Pc
0 g
Pc
Bb
2 (Black & White) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0.25 0 0 0 k
Pc
0.5 0 0 0 k
Pc
0.75 0 0 0 k
Pc
1 0 0 0 k
Pc
0.25 0.25 0 0 k
Pc
0.5 0.5 0 0 k
Pc
0.75 0.75 0 0 k
Pc
1 1 0 0 k
Pc
Bb
2 (Red & Yellow) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0 0.25 0 0 k
Pc
0 0.5 0 0 k
Pc
0 0.75 0 0 k
Pc
0 1 0 0 k
Pc
0 0.25 0.25 0 k
Pc
0 0.5 0.5 0 k
Pc
0 0.75 0.75 0 k
Pc
0 1 1 0 k
Pc
Bb
0 0 0 0 Bh
2 (Yellow & Blue Radial) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0 0 0.25 0 k
Pc
0 0 0.5 0 k
Pc
0 0 0.75 0 k
Pc
0 0 1 0 k
Pc
0.25 0 0.25 0 k
Pc
0.5 0 0.5 0 k
Pc
0.75 0 0.75 0 k
Pc
1 0 1 0 k
Pc
(Yellow Stripe) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
Pc
0.25 0.125 0 0 k
Pc
0.5 0.25 0 0 k
Pc
0.75 0.375 0 0 k
Pc
1 0.5 0 0 k
Pc
0.125 0.25 0 0 k
Pc
0.25 0.5 0 0 k
Pc
0.375 0.75 0 0 k
Pc
0.5 1 0 0 k
Pc
0 0 0 0 k
Pc
0 0.25 0.125 0 k
Pc
0 0.5 0.25 0 k
Pc
0 0.75 0.375 0 k
Pc
0 1 0.5 0 k
Pc
0 0.125 0.25 0 k
Pc
0 0.25 0.5 0 k
Pc
0 0.375 0.75 0 k
Pc
0 0.5 1 0 k
Pc
0 0 0 0 k
Pc
0.125 0 0.25 0 k
Pc
0.25 0 0.5 0 k
Pc
0.375 0 0.75 0 k
Pc
0.5 0 1 0 k
Pc
0.25 0 0.125 0 k
Pc
0.5 0 0.25 0 k
Pc
0.75 0 0.375 0 k
Pc
1 0 0.5 0 k
Pc
0 0 0 0 k
Pc
0.25 0.125 0.125 0 k
Pc
0.5 0.25 0.25 0 k
Pc
0.75 0.375 0.375 0 k
Pc
1 0.5 0.5 0 k
Pc
0.25 0.25 0.125 0 k
Pc
0.5 0.5 0.25 0 k
Pc
0.75 0.75 0.375 0 k
Pc
1 1 0.5 0 k
Pc
0 0 0 0 k
Pc
0.125 0.25 0.125 0 k
Pc
0.25 0.5 0.25 0 k
Pc
0.375 0.75 0.375 0 k
Pc
0.5 1 0.5 0 k
Pc
0.125 0.25 0.25 0 k
Pc
0.25 0.5 0.5 0 k
Pc
0.375 0.75 0.75 0 k
Pc
0.5 1 1 0 k
Pc
0 0 0 0 k
Pc
0.125 0.125 0.25 0 k
Pc
0.25 0.25 0.5 0 k
Pc
0.375 0.375 0.75 0 k
Pc
0.5 0.5 1 0 k
Pc
0.25 0.125 0.25 0 k
Pc
0.5 0.25 0.5 0 k
Pc
0.75 0.375 0.75 0 k
Pc
1 0.5 1 0 k
Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 0 79 128 255 Lb
(Layer 1) Ln
0 A
0 R
0.8 G
800 Ar
0 J 0 j 1.5 w 4 M []0 d
%AI3_Note:
0 D
0 XR
110.0809 314.8991 m
197.609 319.7329 205.9214 221.616 v
206.0895 219.6333 206.0895 219.6333 y
99.1514 219.6333 110.0809 219.5714 y
110.0809 314.8991 l
s
2.4 w
110.0601 219.759 m
493.3928 219.1166 500.6643 219.106 v
500.6743 220.0111 500.0018 228.1197 v
468 614 110.0601 609.5644 y
110.0601 219.759 l
s
110.0809 447.7597 m
319.5036 459.3255 339.3924 224.5675 v
339.7946 219.8236 339.7946 219.8236 y
83.9307 219.8236 110.0809 219.6755 y
110.0809 447.7597 l
s
110.0809 372.2533 m
250.2133 379.9923 263.5216 222.9073 v
263.7908 219.7329 263.7908 219.7329 y
92.5829 219.7329 110.0809 219.6339 y
110.0809 372.2533 l
s
110.0809 319.9582 m
202.216 325.0465 210.966 221.7652 v
211.1429 219.6781 211.1429 219.6781 y
98.5761 219.6781 110.0809 219.613 y
110.0809 319.9582 l
s
110.0601 264.9141 m
151.5206 267.2038 155.458 220.7275 v
155.5377 219.7884 155.5377 219.7884 y
104.883 219.7884 110.0601 219.759 y
110.0601 264.9141 l
s
110.0184 219.4949 m
110.0184 244.2848 l
132.7802 245.5419 134.9417 220.0265 v
134.9856 219.511 134.9856 219.511 y
110.0416 219.511 110.0184 219.4949 y
S
1 Ap
0.5 w
500.9537 610.7499 m
500.9537 219.8751 L
110.0794 219.8751 L
110.0794 610.7499 L
500.9537 610.7499 L
n
u
0 Ap
0 R
1 G
1 J 1 j 9 w
110.983 220.8203 m
157.5293 321.5845 284.6005 351.1711 v
357.792 368.2129 427.792 407.5462 459.792 444.8796 c
S
453.9799 538.9546 m
375.9799 447.6213 254.5338 377.5712 v
131.6624 306.7002 110.983 220.8203 y
S
110.983 220.8203 m
162.0484 307.5658 265.6065 301.7282 v
347.2394 297.127 420.7984 328.9617 443.8074 376.5286 c
S
110.983 220.8203 m
151.4858 290.7851 277.637 262.379 v
391.8063 236.671 399.0337 270.3045 417.0337 289.6378 c
S
U
1 Ap
0.8 G
0 J 0 j 3 w
500.9011 610.7739 m
500.9011 219.8991 L
110.0268 219.8991 L
110.0268 610.7739 L
500.9011 610.7739 L
s
u
*u
0 Ap
0 O
0.8 g
1 w
479.0844 378.4384 m
476.8176 377.9526 476.4038 376.0637 476.4038 374.8223 c
476.4038 372.4836 478.1309 370.5947 481.531 370.5947 c
484.5713 370.5947 486.9101 371.6741 486.9101 374.8763 c
486.9101 376.0097 486.3704 377.9706 483.366 378.5643 c
483.366 380.2554 L
488.2413 379.5358 488.4572 375.5779 488.4572 374.6065 c
488.4572 371.6741 486.5503 368.7957 481.585 368.7957 c
477.6092 368.7957 474.8567 371.0624 474.8567 374.8223 c
474.8567 378.1505 476.9255 379.8776 479.0844 380.1294 C
479.0844 378.4384 l
f
*U
*u
478.4367 386 m
478.4367 389.0043 480.9733 390.3716 483.402 390.3716 c
485.8307 390.3716 488.3673 389.0043 488.3673 386 c
488.3673 382.9956 485.8307 381.6284 483.402 381.6284 c
480.9733 381.6284 478.4367 382.9956 478.4367 386 c
f
1 D
487 386 m
487 388.2667 484.6613 388.7345 483.402 388.7345 c
482.1427 388.7345 479.804 388.2667 479.804 386 c
479.804 383.7332 482.1427 383.2655 483.402 383.2655 c
484.6613 383.2655 487 383.7332 487 386 c
f
*U
*u
0 D
478.7066 392.1744 m
478.7066 393.6676 L
480.0378 393.6676 L
480.0378 393.7036 L
479.5341 394.0454 478.4367 394.855 478.4367 396.546 c
478.4367 398.2371 479.4622 398.7768 479.9659 399.0467 c
479.0844 399.8382 478.4367 400.4679 478.4367 401.9251 c
478.4367 402.9325 478.9584 404.8395 481.603 404.8395 c
488.1154 404.8395 L
488.1154 403.2563 L
482.0347 403.2563 L
480.7394 403.2563 479.8579 402.8606 479.8579 401.5113 c
479.8579 400.18 481.1172 399.2985 482.3765 399.2985 c
488.1154 399.2985 L
488.1154 397.7154 L
481.603 397.7154 L
480.8114 397.7154 479.8579 397.4096 479.8579 396.2402 c
479.8579 395.3407 480.4336 393.7576 482.9882 393.7576 c
488.1154 393.7576 L
488.1154 392.1744 L
478.7066 392.1744 l
f
*U
*u
478.7066 407.0382 m
478.7066 408.5314 L
480.0378 408.5314 L
480.0378 408.5674 L
479.4981 408.9452 478.4367 409.6648 478.4367 411.3739 c
478.4367 413.8745 480.4876 415.2957 483.1321 415.2957 c
485.3809 415.2957 488.3852 414.3602 488.3852 411.158 c
488.3852 409.8987 487.7916 409.0711 487.1259 408.6574 c
487.1259 408.6214 L
491.8393 408.6214 L
491.8393 407.0382 L
478.7066 407.0382 l
f
1 D
487.018 411.122 m
487.018 412.8491 485.4529 413.6586 483.384 413.6586 c
482.1787 413.6586 479.8579 413.5327 479.8579 411.086 c
479.8579 408.8013 482.3226 408.5494 483.8517 408.5494 c
486.3524 408.5494 487.018 410.1146 487.018 411.122 c
f
*U
*u
0 D
481.567 417.1166 m
479.3182 417.1885 478.4367 418.6817 478.4367 421.0024 c
478.4367 421.758 478.6526 424.4925 481.0633 424.4925 c
486.4783 424.4925 L
486.8741 424.4925 487.036 424.6904 487.036 425.0142 c
487.036 425.1581 487 425.356 486.964 425.5359 c
488.1154 425.5359 L
488.1874 425.2661 488.2953 425.0322 488.2953 424.6724 c
488.2953 423.2692 487.5757 423.0533 486.8561 422.9993 c
487.5217 422.3877 488.3852 421.4342 488.3852 419.5992 c
488.3852 417.8721 487.2879 416.6488 485.6687 416.6488 c
484.8772 416.6488 483.0422 416.8827 482.7184 419.5092 c
482.3945 422.1178 L
482.3586 422.4956 482.2146 422.9453 481.2792 422.9453 c
480.2897 422.9453 479.75 422.2257 479.75 420.7326 c
479.75 418.9336 480.8474 418.6817 481.567 418.5738 C
481.567 417.1166 l
f
1 D
483.312 422.9094 m
483.5099 422.6575 483.6538 422.2617 483.9057 420.3008 c
484.0137 419.5272 484.2475 418.2859 485.4349 418.2859 c
486.4603 418.2859 487.072 418.8076 487.072 419.995 c
487.072 421.4702 486.1185 422.9094 484.8592 422.9094 C
483.312 422.9094 l
f
*U
*u
0 D
481.8728 433.0596 m
480.6135 432.8617 479.8579 432.1601 479.8579 430.8289 c
479.8579 428.8679 481.7289 428.2383 483.402 428.2383 c
485.0211 428.2383 487.018 428.6341 487.018 430.8109 c
487.018 431.8723 486.2264 432.7898 484.7872 433.0596 c
484.7872 434.5888 L
486.2804 434.4269 488.3852 433.5094 488.3852 430.7569 c
488.3852 428.1124 486.3883 426.5472 483.6718 426.5472 c
480.7574 426.5472 478.4367 427.9504 478.4367 431.0627 c
478.4367 433.5274 480.2357 434.4629 481.8728 434.5888 C
481.8728 433.0596 l
f
*U
*u
480.0198 438.1198 m
486.1365 438.1198 L
486.8741 438.1198 486.8741 438.7495 486.8741 439.0733 c
486.8741 439.631 L
488.1154 439.631 L
488.1694 439.0553 488.2413 438.6055 488.2413 438.4436 c
488.2413 436.8785 487.3598 436.5367 486.2264 436.5367 c
480.0198 436.5367 L
480.0198 435.2594 L
478.7066 435.2594 L
478.7066 436.5367 L
476.08 436.5367 L
476.08 438.1198 L
478.7066 438.1198 L
478.7066 439.631 L
480.0198 439.631 L
480.0198 438.1198 l
f
*U
*u
488.1154 457.0089 m
480.4876 457.0089 L
480.1098 457.0089 478.4727 457.0449 477.2674 457.0449 c
477.2674 457.0089 L
488.1154 453.3749 L
488.1154 451.6478 L
477.2853 448.0138 L
477.2853 447.9778 L
478.4727 447.9778 480.1098 448.0138 480.4876 448.0138 c
488.1154 448.0138 L
488.1154 446.3227 L
475.1985 446.3227 L
475.1985 448.8234 L
486.1185 452.5113 L
486.1185 452.5473 L
475.1985 456.2173 L
475.1985 458.6999 L
488.1154 458.6999 L
488.1154 457.0089 l
f
*U
*u
488.1154 467.3032 m
486.7481 467.3032 L
486.7122 467.2672 L
487.8096 466.6016 488.3852 465.792 488.3852 464.2809 c
488.3852 462.8956 487.7196 461.2225 485.4708 461.2225 c
478.7066 461.2225 L
478.7066 462.8057 L
484.9491 462.8057 L
486.4963 462.8057 487.018 463.5972 487.018 464.6227 c
487.018 466.6196 485.255 467.2132 483.8877 467.2132 c
478.7066 467.2132 L
478.7066 468.7964 L
488.1154 468.7964 L
488.1154 467.3032 l
f
*U
*u
478.4367 475.0068 m
478.4367 478.0112 480.9733 479.3784 483.402 479.3784 c
485.8307 479.3784 488.3673 478.0112 488.3673 475.0068 c
488.3673 472.0025 485.8307 470.6352 483.402 470.6352 c
480.9733 470.6352 478.4367 472.0025 478.4367 475.0068 c
f
1 D
487 475.0068 m
487 477.2736 484.6613 477.7413 483.402 477.7413 c
482.1427 477.7413 479.804 477.2736 479.804 475.0068 c
479.804 472.7401 482.1427 472.2723 483.402 472.2723 c
484.6613 472.2723 487 472.7401 487 475.0068 c
f
*U
*u
0 D
488.1154 488.8451 m
488.1154 487.2619 L
482.3226 487.2619 L
480.6855 487.2619 479.8579 486.7942 479.8579 485.247 c
479.8579 484.3475 480.4336 482.7644 482.9882 482.7644 c
488.1154 482.7644 L
488.1154 481.1813 L
478.7066 481.1813 L
478.7066 482.6744 L
480.0378 482.6744 L
480.0378 482.7104 L
479.5341 483.0522 478.4367 483.9338 478.4367 485.5529 c
478.4367 487.0101 479.0304 488.8451 481.7109 488.8451 C
488.1154 488.8451 l
f
*U
*u
478.9764 504.1762 m
476.9795 504.0862 476.3499 502.4312 476.3499 500.974 c
476.3499 499.8766 476.6557 498.0236 478.6166 498.0236 c
479.714 498.0236 480.0738 498.7972 480.2537 499.5527 c
481.0993 503.2407 L
481.495 504.9138 482.5025 506.1731 484.5534 506.1731 c
487.6117 506.1731 488.4572 503.3307 488.4572 501.1179 c
488.4572 498.7252 487.7376 497.7897 487.2159 497.214 c
486.2264 496.1166 485.147 495.9007 483.9417 495.9007 c
483.9417 497.5378 L
486.2804 497.5378 486.964 499.4448 486.964 501.0999 c
486.964 502.3592 486.6402 504.482 484.7872 504.482 c
483.438 504.482 483.0062 503.8524 482.5025 501.7295 c
481.8908 499.085 L
481.6929 498.2395 481.0993 496.3325 478.8505 496.3325 c
476.8356 496.3325 474.8567 497.6458 474.8567 500.7761 c
474.8567 505.2916 477.5552 505.7413 478.9764 505.8133 C
478.9764 504.1762 l
f
*U
*u
478.4367 512.0263 m
478.4367 515.0307 480.9733 516.3979 483.402 516.3979 c
485.8307 516.3979 488.3673 515.0307 488.3673 512.0263 c
488.3673 509.022 485.8307 507.6547 483.402 507.6547 c
480.9733 507.6547 478.4367 509.022 478.4367 512.0263 c
f
1 D
487 512.0263 m
487 514.2931 484.6613 514.7608 483.402 514.7608 c
482.1427 514.7608 479.804 514.2931 479.804 512.0263 c
479.804 509.7596 482.1427 509.2918 483.402 509.2918 c
484.6613 509.2918 487 509.7596 487 512.0263 c
f
*U
*u
0 D
488.1154 519.8199 m
488.1154 518.2368 L
475.1985 518.2368 L
475.1985 519.8199 L
488.1154 519.8199 l
f
*U
*u
485.165 530.183 m
485.6148 530.1291 486.946 529.6973 487.7376 528.51 c
488.0254 528.0782 488.3852 527.4665 488.3852 525.9554 c
488.3852 523.3108 486.3883 521.7457 483.6718 521.7457 c
480.7574 521.7457 478.4367 523.1489 478.4367 526.2612 c
478.4367 528.9777 480.5955 530.309 483.9237 530.309 c
483.9237 523.4367 L
485.8846 523.4367 487.018 524.3542 487.018 526.1712 c
487.018 527.6644 485.8666 528.5459 485.165 528.5999 C
485.165 530.183 l
f
1 D
482.6644 528.6719 m
481.2072 528.5819 479.8579 527.9703 479.8579 526.0453 c
479.8579 524.5881 481.2072 523.4367 482.6644 523.4367 C
482.6644 528.6719 l
f
*U
*u
0 D
488.1154 539.8656 m
488.1154 538.2824 L
482.3226 538.2824 L
480.6855 538.2824 479.8579 537.8147 479.8579 536.2675 c
479.8579 535.368 480.4336 533.7849 482.9882 533.7849 c
488.1154 533.7849 L
488.1154 532.2018 L
478.7066 532.2018 L
478.7066 533.695 L
480.0378 533.695 L
480.0378 533.7309 L
479.5341 534.0727 478.4367 534.9543 478.4367 536.5734 c
478.4367 538.0306 479.0304 539.8656 481.7109 539.8656 C
488.1154 539.8656 l
f
*U
*u
478.4367 546.04 m
478.4367 549.0444 480.9733 550.4116 483.402 550.4116 c
485.8307 550.4116 488.3673 549.0444 488.3673 546.04 c
488.3673 543.0357 485.8307 541.6684 483.402 541.6684 c
480.9733 541.6684 478.4367 543.0357 478.4367 546.04 c
f
1 D
487 546.04 m
487 548.3068 484.6613 548.7745 483.402 548.7745 c
482.1427 548.7745 479.804 548.3068 479.804 546.04 c
479.804 543.7733 482.1427 543.3055 483.402 543.3055 c
484.6613 543.3055 487 543.7733 487 546.04 c
f
*U
*u
0 D
488.1154 553.8336 m
488.1154 552.2504 L
478.7066 552.2504 L
478.7066 553.8336 L
488.1154 553.8336 l
f
476.9975 552.2504 m
475.1985 552.2504 L
475.1985 553.8336 L
476.9975 553.8336 L
476.9975 552.2504 l
f
*U
*u
488.1154 564.0168 m
488.1154 562.5236 L
486.8201 562.5236 L
486.8201 562.4876 L
488.0974 561.804 488.3852 560.7246 488.3852 559.8071 c
488.3852 556.6049 485.3809 555.6694 483.1321 555.6694 c
480.4876 555.6694 478.4367 557.0906 478.4367 559.5912 c
478.4367 561.3003 479.4981 562.0199 480.0378 562.3977 c
479.9119 562.4337 L
475.1985 562.4337 L
475.1985 564.0168 L
488.1154 564.0168 l
f
1 D
487.018 559.8431 m
487.018 560.8505 486.3524 562.4157 483.8517 562.4157 c
482.3226 562.4157 479.8579 562.1638 479.8579 559.8791 c
479.8579 557.4324 482.1787 557.3065 483.384 557.3065 c
485.4529 557.3065 487.018 558.116 487.018 559.8431 c
f
*U
U
u
*u
0 0.93 1 0.28 k
0 R
1 G
0 D
210.1814 484.1473 m
202.4958 479.0236 192.4923 477.1936 183.2207 477.1936 c
156.382 477.1936 140.2788 494.1508 140.2788 520.8675 c
140.2788 548.3162 160.5298 563.9314 186.2706 563.9314 c
195.1761 563.9314 204.3257 561.8575 212.4993 558.3197 c
211.2794 555.2698 210.5474 552.098 209.9374 548.9261 c
209.0835 548.8041 L
207.3755 551 198.348 559.2956 185.7826 559.2956 c
163.3357 559.2956 152.2342 541.1185 152.2342 520.3795 c
152.2342 496.9567 165.6536 481.9514 184.9286 481.9514 c
198.104 481.9514 208.3515 489.759 210.7914 491.8329 C
210.1814 484.1473 l
b
*U
*u
309.4876 562.1015 m
312.6594 531.969 316.0753 501.9584 319.3692 478.6576 c
317.1733 478.7796 315.4653 479.0236 313.6354 479.0236 c
311.6835 479.0236 309.7316 478.7796 307.9017 478.6576 c
305.8278 503.1784 303.3879 529.5291 301.68 541.6065 c
287.5287 516.3537 277.0372 496.8347 269.7175 479.9995 c
268.3756 479.9995 L
261.6659 493.7848 L
253.8583 509.888 245.3187 525.7473 237.0231 541.6065 c
234.3393 517.8177 231.0454 493.6628 231.0454 478.6576 c
229.4595 478.7796 228.1176 479.0236 226.7756 479.0236 c
225.1897 479.0236 223.8478 478.7796 222.3838 478.6576 c
225.5557 498.2986 232.8753 549.2921 234.0953 562.1015 c
237.2671 562.1015 L
247.0266 542.7044 258.7381 519.7696 271.7914 498.1766 c
283.3809 519.0376 294.6043 540.2646 306.9257 562.1015 C
309.4876 562.1015 l
b
*U
*u
334.4914 495.1268 m
339.2492 487.3191 344.7389 482.4394 354.2545 482.4394 c
364.136 482.4394 371.2116 490.613 371.2116 500.2505 c
371.2116 522.9414 333.0275 512.9379 333.0275 540.5085 c
333.0275 556.2458 345.4709 563.9314 360.1102 563.9314 c
365.9659 563.9314 373.0415 562.1015 377.5553 558.0757 c
376.0914 554.9038 375.2374 551.488 374.2615 548.0722 c
373.0415 548.0722 L
370.4797 554.6598 365.1119 558.6856 357.9143 558.6856 c
349.4967 558.6856 342.543 553.0739 342.543 544.4123 c
342.543 521.9654 380.9711 530.993 380.9711 505.0083 c
380.9711 487.5631 367.4298 477.1936 350.8386 477.1936 c
344.8609 477.1936 335.1014 479.7555 330.9536 484.2693 c
332.1735 487.8071 332.7835 491.4669 333.2715 495.1268 C
334.4914 495.1268 l
b
*U
U
u
0.86 G
1 J 4.8 w
110.983 220.8203 m
157.5293 321.5845 284.6005 351.1711 v
357.792 368.2129 427.792 407.5462 459.792 444.8796 c
S
453.9799 538.9546 m
375.9799 447.6213 254.5338 377.5712 v
131.6624 306.7002 110.983 220.8203 y
S
110.983 220.8203 m
162.0484 307.5658 265.6065 301.7282 v
347.2394 297.127 420.7984 328.9617 443.8074 376.5286 c
S
110.983 220.8203 m
151.4858 290.7851 277.637 262.379 v
391.8063 236.671 399.0337 270.3045 417.0337 289.6378 c
S
U
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
